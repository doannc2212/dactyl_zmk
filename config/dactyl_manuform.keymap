#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LBKT>;
            key-positions = <3 2>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <6 7>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 22>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 5>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        as: as {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5              &kp N6 &kp N7 &kp N8    &kp N9  &kp N0   &kp BSPC
                &kp TAB   &kp Q  &kp W  &kp E  &kp R  &kp T               &kp Y  &kp U  &kp I     &kp O   &kp P    &kp MINUS
                &kp GRAVE &kp A  &kp S  &kp D  &kp F  &kp G               &kp H  &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &mo 0   &kp Z  &kp X  &kp C  &kp V  &kp B               &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &mo 1
                                 &kp MINUS &kp LBKT                                     &kp RBKT  &kp EQUAL 
                                            &kp LCTRL                              &kp RCTRL
                                            &kp LSHFT &kp SPACE           &kp RET  &kp RSHFT
                                            &kp LALT  &kp LGUI            &kp RGUI &kp RALT
            >;
        };

        lower_layer {
            bindings = <
                &kp F12 &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                &kp F6 &kp F7   &kp F8   &kp F9 &kp F10   &kp F11
                &trans  &trans &trans &trans &trans &trans                &trans &trans   &trans   &trans &trans    &trans
                &trans  &trans &trans &trans &trans &trans                &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans 
                &trans  &trans &trans &trans &trans &trans                &trans &trans   &trans   &trans &trans    &trans
                               &trans &trans                                              &trans &trans
                                             &trans &trans                &trans &mo 3
                                             &trans &trans                &trans &trans
                                             &trans &trans                &trans &trans
            >;
        };

        raise_layer {
            bindings = <
                &trans  &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &kp DEL
                &trans  &kp K_PLAY_PAUSE &kp K_VOL_UP &trans &trans &trans          &trans &trans &trans &trans &trans &trans
                &trans  &kp K_PREV &kp K_VOL_DN &kp K_NEXT &trans &trans          &trans &trans &trans &trans &trans &trans
                &trans  &trans &kp K_MUTE &trans &trans &trans            &trans &trans &trans &trans &trans &trans 
                               &trans &trans                                            &trans &trans
                                             &mo 3 &trans               &trans &trans
                                             &trans  &trans               &trans &trans
                                             &trans  &trans               &trans &trans
            >;
        };

        adjust_layer {
            bindings = <
                &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &none       &none      &none &none &none &none
                &none &none        &out OUT_USB &none        &sys_reset   &none                    &none       &sys_reset &none &none &none &none
                &none &none        &out OUT_BLE &none        &none        &none                    &none       &none      &none &none &none &none
                &none &none        &bt BT_CLR   &none        &none        &bootloader              &bootloader &none      &none &none &none &none
                                   &none        &none                                                                     &none &none
                                                             &none        &none                    &none       &none
                                                             &none        &none                    &none       &none
                                                             &none        &none                    &none       &none
            >;
        };
    };
};
